<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="MemberChargeReturnLogMapper" >
  <resultMap id="BaseResultMap" type="MemberChargeReturnLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="charge_id" property="chargeId" jdbcType="BIGINT" />
    <result column="charge_return_info" property="chargeReturnInfo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, charge_id, charge_return_info, create_time
  </sql>
  <!-- 
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="MemberChargeReturnLog" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_charge_return_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_charge_return_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="queryMemberChargeReturnLogByChargeId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
  	select 
    <include refid="Base_Column_List" />
    from member_charge_return_log
    where charge_id = #{chargeId,jdbcType=BIGINT}
  </select>
  
  <!-- 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_charge_return_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="MemberChargeReturnLog" >
    delete from member_charge_return_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  -->
  <!-- 
  <insert id="insert" parameterType="MemberChargeReturnLog" >
    insert into member_charge_return_log (id, charge_id, charge_return_info, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{chargeId,jdbcType=BIGINT}, #{chargeReturnInfo,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  -->
  <insert id="insertSelective" parameterType="MemberChargeReturnLog" >
    <selectKey resultType = "long" keyProperty = "id">
  		SELECT LAST_INSERT_ID() AS ID
  	</selectKey>
    
    insert into member_charge_return_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="chargeId != null" >
        charge_id,
      </if>
      <if test="chargeReturnInfo != null" >
        charge_return_info,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="chargeId != null" >
        #{chargeId,jdbcType=BIGINT},
      </if>
      <if test="chargeReturnInfo != null" >
        #{chargeReturnInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!-- 
  <select id="countByExample" parameterType="MemberChargeReturnLog" resultType="java.lang.Integer" >
    select count(*) from member_charge_return_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  -->
  
  <!-- 
  <update id="updateByExampleSelective" parameterType="map" >
    update member_charge_return_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.chargeId != null" >
        charge_id = #{record.chargeId,jdbcType=BIGINT},
      </if>
      <if test="record.chargeReturnInfo != null" >
        charge_return_info = #{record.chargeReturnInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_charge_return_log
    set id = #{record.id,jdbcType=BIGINT},
      charge_id = #{record.chargeId,jdbcType=BIGINT},
      charge_return_info = #{record.chargeReturnInfo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="MemberChargeReturnLog" >
    update member_charge_return_log
    <set >
      <if test="chargeId != null" >
        charge_id = #{chargeId,jdbcType=BIGINT},
      </if>
      <if test="chargeReturnInfo != null" >
        charge_return_info = #{chargeReturnInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aicai.jcob.common.entity.MemberChargeReturnLog" >
    update member_charge_return_log
    set charge_id = #{chargeId,jdbcType=BIGINT},
      charge_return_info = #{chargeReturnInfo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  -->
</mapper>