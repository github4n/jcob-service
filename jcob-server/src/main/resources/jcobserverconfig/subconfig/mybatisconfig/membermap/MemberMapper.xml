<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="MemberMapper" >
  <resultMap id="BaseResultMap" type="Member" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="client_type" property="clientType" jdbcType="TINYINT" />
    <result column="channel" property="channel" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="cert_no" property="certNo" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="cert_type" property="certType" jdbcType="BIT" />
    <result column="client_version" property="clientVersion" jdbcType="VARCHAR" />
    <result column="register_type" property="registerType" jdbcType="BIT" />
    <result column="flag_bit" property="flagBit" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="password_strength" property="passwordStrength" jdbcType="TINYINT" />
  </resultMap>
 
  
  <sql id="Base_Column_List" >
    id, no, password, nick_name, phone, icon, email, client_type, channel, status, cert_no, 
    real_name, cert_type, client_version, register_type, flag_bit, create_time, update_time, 
    last_login_time,password_strength
  </sql>
 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="queryMemberByPhoneRegisterType" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from member
    where phone = #{phone,jdbcType=VARCHAR}
    and register_type = #{registerType,jdbcType=BIT}
  </select>
  
  <select id="queryMemberByPhone" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from member
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  
  <select id="queryMemberByNickName" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from member
    where nick_name = #{nickName,jdbcType=VARCHAR}
  </select>
  
  <select id="countMemberVoByOption" resultType="int" parameterType="map">
  	select count(1) from member
  	where 1 = 1
  	
  	<if test="memberId != null">
  		and id = #{memberId,jdbcType=BIGINT}
  	</if>
  	
  	<if test="phone != null">
  		and phone = #{phone,jdbcType=VARCHAR}
  	</if>
  	
  	<if test="nickName != null">
  		and nick_name = #{nickName,jdbcType=VARCHAR}
  	</if>
  	
  	<if test="status != null">
  		and status = #{status,jdbcType=TINYINT}
  	</if>
  	
  	<if test="startTime != null">
  		and create_time <![CDATA[ >= ]]> #{startTime,jdbcType=TIMESTAMP}
  	</if>
  	
  	<if test="endTime != null">
  		and create_time <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}
  	</if>
  	
  	<if test="clientType != null">
  		and client_type = #{clientType,jdbcType=TINYINT}
  	</if>
  	
  	<if test="registerType != null">
  		and register_type = #{registerType,jdbcType=BIT}
  	</if>
  	
  </select>
  
  <select id="pageMemberVoByOption" resultMap="BaseResultMap" parameterType="map">
  	select 
  	<include refid="Base_Column_List" />
  	from member
  	where 1 = 1
  	
  	<if test="memberId != null">
  		and id = #{memberId,jdbcType=BIGINT}
  	</if>
  	
  	<if test="phone != null">
  		and phone = #{phone,jdbcType=VARCHAR}
  	</if>
  	
  	<if test="nickName != null">
  		and nick_name = #{nickName,jdbcType=VARCHAR}
  	</if>
  	
  	<if test="status != null">
  		and status = #{status,jdbcType=TINYINT}
  	</if>
  	
  	<if test="startTime != null">
  		and create_time <![CDATA[ >= ]]> #{startTime,jdbcType=TIMESTAMP}
  	</if>
  	
  	<if test="endTime != null">
  		and create_time <![CDATA[ <= ]]> #{endTime,jdbcType=TIMESTAMP}
  	</if>
  	
  	<if test="clientType != null">
  		and client_type = #{clientType,jdbcType=TINYINT}
  	</if>
  	
  	<if test="registerType != null">
  		and register_type = #{registerType,jdbcType=BIT}
  	</if>
  	
  	order by id asc
  	
  	limit #{pageSize} offset #{startIndex}
  </select>
  
  <select id="queryMemberByIdArray" resultMap="BaseResultMap" parameterType="map">
  	select 
  	<include refid="Base_Column_List" />
  	from member
  	where id in 
    <foreach collection="idArray" item="item" index="index" open="(" separator="," close=")">
		#{item}
	</foreach>
  </select>
  
  <select id="queryMemberByIdArrayAndOption" resultMap="BaseResultMap" parameterType="map">
  	select 
  	<include refid="Base_Column_List" />
  	from member
  	where 1 = 1
  	
  	<if test="idArray != null">
  		and id in 
	    <foreach collection="idArray" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
  	</if>
  	
  	<if test="phone != null and phone!=''">
  		and phone = #{phone}
  	</if>
  	
  	<if test="nickName != null and nickName!=''">
  		and nick_name = #{nickName}
  	</if>
  	
  	<if test="status != null">
  		and status = #{status}
  	</if>
  	
  	<if test="clientType != null">
  		and client_type = #{clientType}
  	</if>
  	
  	<if test="registerType != null">
  		and register_type = #{registerType}
  	</if>
  </select>
  
  <select id="queryValidMemberByPhone" resultMap="BaseResultMap" parameterType="map">
  	select 
  	<include refid="Base_Column_List" />
  	from member
  	where phone = #{phone,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member
    where id = #{id,jdbcType=BIGINT}
  </delete>
 
  <insert id="insert" parameterType="Member" >
    insert into member (id, no, password, 
      nick_name, phone, icon, 
      email, client_type, channel, 
      status, cert_no, real_name, 
      cert_type, client_version, register_type, 
      flag_bit, create_time, update_time, 
      last_login_time)
    values (#{id,jdbcType=BIGINT}, #{no,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{clientType,jdbcType=TINYINT}, #{channel,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{certNo,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{certType,jdbcType=BIT}, #{clientVersion,jdbcType=VARCHAR}, #{registerType,jdbcType=BIT}, 
      #{flagBit,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="Member" >
  	<selectKey resultType = "long" keyProperty = "id">
  		SELECT LAST_INSERT_ID() AS ID
  	</selectKey>  
  
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="clientType != null" >
        client_type,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="certNo != null" >
        cert_no,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="certType != null" >
        cert_type,
      </if>
      <if test="clientVersion != null" >
        client_version,
      </if>
      <if test="registerType != null" >
        register_type,
      </if>
      <if test="flagBit != null" >
        flag_bit,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="passwordStrength != null">
      	password_strength,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        #{clientType,jdbcType=TINYINT},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="certNo != null" >
        #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="certType != null" >
        #{certType,jdbcType=BIT},
      </if>
      <if test="clientVersion != null" >
        #{clientVersion,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        #{registerType,jdbcType=BIT},
      </if>
      <if test="flagBit != null" >
        #{flagBit,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordStrength != null">
      	#{passwordStrength,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  
  <!-- 
  <update id="updateByPrimaryKeySelective" parameterType="Member" >
    update member
    <set >
      <if test="no != null" >
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null" >
        client_type = #{clientType,jdbcType=TINYINT},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="certNo != null" >
        cert_no = #{certNo,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="certType != null" >
        cert_type = #{certType,jdbcType=BIT},
      </if>
      <if test="clientVersion != null" >
        client_version = #{clientVersion,jdbcType=VARCHAR},
      </if>
      <if test="registerType != null" >
        register_type = #{registerType,jdbcType=BIT},
      </if>
      <if test="flagBit != null" >
        flag_bit = #{flagBit,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
   -->
  
  <update id="updateByPrimaryKey" parameterType="Member" >
    update member
    set no = #{no,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      client_type = #{clientType,jdbcType=TINYINT},
      channel = #{channel,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      cert_no = #{certNo,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      cert_type = #{certType,jdbcType=BIT},
      client_version = #{clientVersion,jdbcType=VARCHAR},
      register_type = #{registerType,jdbcType=BIT},
      flag_bit = #{flagBit,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberStatusById" parameterType="map">
  	update member set status = #{status,jdbcType=TINYINT}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberPasswordById" parameterType="map">
  	update member set password = #{password,jdbcType=VARCHAR},
  	password_strength = #{passwordStrength,jdbcType=TINYINT}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberNoPwdById" parameterType="map">
  	update member 
  	set no = #{no,jdbcType=VARCHAR},
  	password = #{password,jdbcType=VARCHAR}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberMobileCertNoRealNameNickNameById" parameterType="map">
  	update member set  
  	phone = #{mobile,jdbcType=VARCHAR},
  	cert_no = #{certNo,jdbcType=VARCHAR},
  	real_name = #{realName,jdbcType=VARCHAR},
  	nick_name = #{nickName,jdbcType=VARCHAR}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberCertNoRealNameById" parameterType="map">
  	update member set  
  	cert_no = #{certNo,jdbcType=VARCHAR},
  	real_name = #{realName,jdbcType=VARCHAR}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberNickNameById" parameterType="map">
  	update member set nick_name = #{nickName,jdbcType=VARCHAR}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberMobileAndPassValid" parameterType="map">
  	update member set phone = #{mobile,jdbcType=VARCHAR},
  	flag_bit = #{flagBit,jdbcType=BIGINT}
  	where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMemberIcon" parameterType="map">
  	update member set icon = #{icon,jdbcType=VARCHAR}
  	where id = #{id,jdbcType=BIGINT} 
  </update>
  
  <update id="updateMemberFlagBit" parameterType="map">
  	update member set flag_bit = #{flagBit,jdbcType=BIGINT}
  	where id = #{id,jdbcType=BIGINT} 
  </update>
  
   <select id="queryMemberListByIdList" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from member
    <where> id in
    	<foreach collection="memberIdList" item="id" open="(" separator="," close=")">
    		#{id}
    	</foreach>
    </where>
  </select>
</mapper>